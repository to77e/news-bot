version: '3.9'

services:
  postgres:
    image: postgres:latest
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$DATABASE_USER
      - POSTGRES_PASSWORD=$DATABASE_PASSWORD
      - POSTGRES_DB=$DATABASE_NAME
    healthcheck:
      test: pg_isready -U $DATABASE_USER -d $DATABASE_NAME
      interval: 10s
      timeout: 45s
      retries: 10
    restart: always
    networks:
      - backend

  migrations:
    build:
      context: .
      dockerfile: ./build/migrations/Dockerfile
    image: news-fetching-bot-migrations
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - backend

  news-fetching-bot:
    build:
      context: .
      dockerfile: build/news-fetching-bot/Dockerfile
    image: news-fetching-bot
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    restart: on-failure
    networks:
      - backend

networks:
  backend:
    name: "news-fetching-bot-backend"
